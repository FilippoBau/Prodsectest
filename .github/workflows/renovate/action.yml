name: "Renovate action"
shell: bash
description: "An action to run renovate"
inputs:
  configurationFile:
    description: "Configuration file"
    required: true
    type: string
  dryRun:
    description: "Run renovate in DryRun mode"
    required: true
    type: string
  app-id:
    description: "Application id"
    required: true
    type: string
  private-key:
    description: "Private key"
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Validate Renovate JSON
      shell: bash
      run: jq type $CONF
      env:
        CONF: ${{ inputs.configurationFile }}
    - name: Read Renovate Version and Hash
      shell: bash
      id: read_version_hash
      run: |
        VERSION=$(jq -r '.renovateVersion' renovate-version.json)
        HASH=$(jq -r '.renovateHash' renovate-version.json)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "HASH=$HASH" >> $GITHUB_ENV    
    - name: Ensure Cache Directory Exists
      shell: bash
      run: mkdir -p cache/renovate
    - name: Cache Renovate
      id: cache-renovate
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
      with:
        path: cache/renovate
        key: renovate-cache-${{ runner.os }}-${{ env.VERSION }}-${{ env.HASH }}
        restore-keys: |
          renovate-cache-${{ runner.os }}- 
    - if: steps.cache-renovate.outputs.cache-hit != 'true'
      shell: bash
      run: |
            docker pull ghcr.io/renovatebot/renovate@sha256:${{ env.HASH }}
            docker save -o cache/renovate/renovate.tar ghcr.io/renovatebot/renovate@sha256:${{ env.HASH }}
    - if: steps.cache-renovate.outputs.cache-hit == 'true'
      shell: bash
      run: docker load -i cache/renovate/renovate.tar
    - name: Get token
      id: get_token
      uses: actions/create-github-app-token@78e5f2ddc08efcb88fbbee6cfa3fed770ba550c3
      with:
        app-id: ${{ inputs.app-id }}
        owner: ${{ github.repository_owner }}
        private-key: ${{ inputs.private-key }}            
    - name: Self-hosted Renovate
      uses: renovatebot/github-action@23b01dbf6f38965076a36aff87f802263164f204
      env:
        # Username for GitHub authentication (should match GitHub App name + [bot])
        RENOVATE_USERNAME: "renovate-pagopa[bot]"
        # Git commit author used, must match GitHub App
        RENOVATE_GIT_AUTHOR: "renovate-pagopa <164534245+renovate-pagopa[bot]@users.noreply.github.com>"
        # Use GitHub API to create commits (this allows for signed commits from GitHub App)
        RENOVATE_PLATFORM_COMMIT: "true"
        # Onboarding not needed for self hosted
        RENOVATE_ONBOARDING: "false"
        RENOVATE_REQUIRE_CONFIG: "optional"
        RENOVATE_PR_HOURLY_LIMIT: 0
        RENOVATE_PR_CONCURRENT_LIMIT: 5
        
        # Dirty run configuration
        RENOVATE_DRY_RUN: ${{inputs.dryRun}}
        RENOVATE_LOG_FILE: '/tmp/renovate/results.json'
        #LOG_LEVEL: "DEBUG"
      with:
        renovate-version: ${{ env.VERSION }}@sha256:${{ env.HASH }}
        configurationFile: ${{ inputs.configurationFile }}
        token: '${{ steps.get_token.outputs.token }}'
    - name: Upload Artifact
      if: ${{inputs.dryRun == 'full'}}
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
      with:
        name: "my-artifact-${{ inputs.configurationFile%.json }}"
        path: /tmp/renovate/results.json
        retention-days: 5
